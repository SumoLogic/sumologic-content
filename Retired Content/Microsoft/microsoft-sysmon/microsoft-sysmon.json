{
    "type": "FolderSyncDefinition",
    "name": "SYSMON",
    "description": "",
    "children": [
        {
            "type": "FolderSyncDefinition",
            "name": "Dashboards",
            "description": "",
            "children": [
                {
                    "type": "FolderSyncDefinition",
                    "name": "Activity",
                    "description": "",
                    "children": [
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - Events Overview",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 13,
                                    "width": 8,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832854",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Type",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total Type\n| order by Total\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 8,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832853",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "column",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| timeslice 1h\n| count as Total _timeslice, RuleName\n| order by _timeslice\n| transpose row _timeslice column RuleName\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1w"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 13,
                                    "width": 16,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":\"4\",\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"bottom\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":\"normal\",\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{\"1\":{\"chartType\":\"column\",\"yAxis\":0},\"2\":{\"chartType\":\"column\",\"yAxis\":0},\"3\":{\"chartType\":\"column\",\"yAxis\":0},\"4\":{\"chartType\":\"column\",\"yAxis\":0},\"5\":{\"chartType\":\"column\",\"yAxis\":0},\"6\":{\"chartType\":\"column\",\"yAxis\":0},\"7\":{\"chartType\":\"column\",\"yAxis\":0},\"8\":{\"chartType\":\"column\",\"yAxis\":0},\"9\":{\"chartType\":\"column\",\"yAxis\":0},\"10\":{\"chartType\":\"column\",\"yAxis\":0},\"11\":{\"chartType\":\"column\",\"yAxis\":0},\"12\":{\"chartType\":\"column\",\"yAxis\":0},\"13\":{\"chartType\":\"column\",\"yAxis\":0},\"14\":{\"chartType\":\"column\",\"yAxis\":0},\"15\":{\"chartType\":\"column\",\"yAxis\":0},\"16\":{\"chartType\":\"column\",\"yAxis\":0},\"17\":{\"chartType\":\"column\",\"yAxis\":0},\"18\":{\"chartType\":\"column\",\"yAxis\":0},\"19\":{\"chartType\":\"column\",\"yAxis\":0},\"20\":{\"chartType\":\"column\",\"yAxis\":0},\"22\":{\"chartType\":\"column\",\"yAxis\":0},\"23\":{\"chartType\":\"column\",\"yAxis\":0},\"255\":{\"chartType\":\"column\",\"yAxis\":0}},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832861",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "EventCode, CategoryString",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total EventCode, CategoryString\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 8,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832852",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 8,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832855",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "EventCode, CategoryString",
                                    "viewerType": "column",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| timeslice 1h\n| count as Total _timeslice, EventCode, CategoryString\n| order by _timeslice\n| transpose row _timeslice column EventCode, CategoryString",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1w"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 5,
                                    "width": 16,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":\"4\",\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"bottom\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":\"normal\",\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{\"1\":{\"chartType\":\"column\",\"yAxis\":0},\"2\":{\"chartType\":\"column\",\"yAxis\":0},\"3\":{\"chartType\":\"column\",\"yAxis\":0},\"4\":{\"chartType\":\"column\",\"yAxis\":0},\"5\":{\"chartType\":\"column\",\"yAxis\":0},\"6\":{\"chartType\":\"column\",\"yAxis\":0},\"7\":{\"chartType\":\"column\",\"yAxis\":0},\"8\":{\"chartType\":\"column\",\"yAxis\":0},\"9\":{\"chartType\":\"column\",\"yAxis\":0},\"10\":{\"chartType\":\"column\",\"yAxis\":0},\"11\":{\"chartType\":\"column\",\"yAxis\":0},\"12\":{\"chartType\":\"column\",\"yAxis\":0},\"13\":{\"chartType\":\"column\",\"yAxis\":0},\"14\":{\"chartType\":\"column\",\"yAxis\":0},\"15\":{\"chartType\":\"column\",\"yAxis\":0},\"16\":{\"chartType\":\"column\",\"yAxis\":0},\"17\":{\"chartType\":\"column\",\"yAxis\":0},\"18\":{\"chartType\":\"column\",\"yAxis\":0},\"19\":{\"chartType\":\"column\",\"yAxis\":0},\"20\":{\"chartType\":\"column\",\"yAxis\":0},\"22\":{\"chartType\":\"column\",\"yAxis\":0},\"23\":{\"chartType\":\"column\",\"yAxis\":0},\"255\":{\"chartType\":\"column\",\"yAxis\":0}},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832856",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "column",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| timeslice 1h\n| count as Total _timeslice, Computer\n| order by _timeslice\n| transpose row _timeslice column Computer",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1w"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 1,
                                    "width": 16,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":\"4\",\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"bottom\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":\"normal\",\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{\"jb-windows-gcp-001\":{\"chartType\":\"column\",\"yAxis\":0}},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832858",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Type",
                                    "viewerType": "column",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| timeslice 1h\n| count as Total _timeslice, Type\n| order by _timeslice\n| transpose row _timeslice column Type\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1w"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 9,
                                    "width": 16,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":\"4\",\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"bottom\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":\"normal\",\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{\"Error\":{\"chartType\":\"column\",\"yAxis\":0},\"Information\":{\"chartType\":\"column\",\"yAxis\":0}},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832865",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7832854",
                                        "7832865",
                                        "7832852",
                                        "7832858",
                                        "7832855",
                                        "7832856",
                                        "7832861",
                                        "7832853"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7832854",
                                        "7832865",
                                        "7832852",
                                        "7832858",
                                        "7832855",
                                        "7832856",
                                        "7832861",
                                        "7832853"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - Investigation Dashboard",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Latest Events",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nArchived\\:\\s(?<Archived>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCallTrace\\:\\s(?<CallTrace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDetails\\:\\s(?<Details>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDevice\\:\\s(?<Device>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nGrantedAccess\\:\\s(?<GrantedAccess>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHash\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIsExecutable\\:\\s(?<IsExecutable>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewName\\:\\s(?<NewName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewThreadId\\:\\s(?<NewThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPreviousCreationUtcTime\\:\\s(?<PreviousCreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGuid\\:\\s(?<SourceProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGUID\\:\\s(?<SourceProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceThreadId\\:\\s(?<SourceThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartAddress\\:\\s(?<StartAddress>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartFunction\\:\\s(?<StartFunction>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartModule\\:\\s(?<StartModule>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGuid\\:\\s(?<TargetProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGUID\\:\\s(?<TargetProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n| format(\"%s\", \"-\") as hash_SHA1\n\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, Archived, CallTrace, CommandLine, Company, Configuration, ConfigurationFileHash, Consumer, CreationUtcTime, CurrentDirectory, Description, Destination, DestinationHostname, DestinationIp, DestinationIsIpv6, DestinationPort, DestinationPortName, Details, Device, EventNamespace, EventType, FileVersion, Filter, GrantedAccess, hash_IMPHASH, hash_MD5, hash_SHA1, hash_SHA256, ID, Image, ImageLoaded, Initiated, IntegrityLevel, IsExecutable, LogonGuid, LogonId, Name, NewName, NewThreadId, Operation, OriginalFileName, ParentCommandLine, ParentImage, ParentProcessGuid, ParentProcessId, PipeName, PreviousCreationUtcTime, ProcessGuid, ProcessId, Product, Protocol, Query, QueryName, QueryResults, QueryStatus, RuleName, SchemaVersion, Signature, SignatureStatus, Signed, SourceHostname, SourceImage, SourceIp, SourceIsIpv6, SourcePort, SourcePortName, SourceProcessGuid, SourceProcessId, SourceThreadId, StartAddress, StartFunction, StartModule, State, TargetFilename, TargetImage, TargetObject, TargetProcessGuid, TargetProcessId, TerminalSessionId, User, UtcTime, Version\n\n| order by date\n| fields -_count\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-15m"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 24,
                                    "height": 16,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832876",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7832876"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7832876"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - Threat Overview",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "SHA256 (IMAGE)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_SHA256\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total hash_SHA256\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 7,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14408952,\"name\":\"Threat Intel - Sysmon - 07: Image loaded\",\"key\":\"J2tB5mZ8bxslyLJmOGzkJqLM6DSueb16pJITOfMzfaiKYmENi1zJGo8PxElq\"}}}}}}}",
                                    "id": "7937389",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "SHA256 (PROCESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_SHA256\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total Hash_SHA256\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 7,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14257341,\"name\":\"Threat Intel - Sysmon - 01: Process Creation\",\"key\":\"AqoITzxDYMLu8nRt60uF59vWwz1xxTSjrSY2PrlNUziiM4CPOjnEod1rhaRE\"}}}}}}}",
                                    "id": "7937249",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "DOMAIN (EGRESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"true\"\n| where !(DestinationHostname=\"-\")\n\n// THREAT INTEL LOOKUP\n// Scope: DestinationIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=DestinationHostname\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total DestinationHostname\n\n{{post_filter}} // POST filter\n\n\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 17,
                                    "y": 11,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14409533,\"name\":\"Threat Intel - Sysmon - 03: Network Connection\",\"key\":\"NwWMouF0I9mJSY8dBNqvNyWeeQGs2nPUO1OfTegYpyPvN4Yh4M510OorGW14\"}}}}}}}",
                                    "id": "7937255",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "IP (EGRESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"true\"\n// THREAT INTEL LOOKUP\n// Scope: DestinationIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=DestinationIp\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total DestinationIp\n\n{{post_filter}} // POST filter\n\n\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 17,
                                    "y": 7,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14409533,\"name\":\"Threat Intel - Sysmon - 03: Network Connection (Copy)\",\"key\":\"NwWMouF0I9mJSY8dBNqvNyWeeQGs2nPUO1OfTegYpyPvN4Yh4M510OorGW14\"}}}}}}}",
                                    "id": "7937251",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "IP (INGRESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"false\"\n\n| \"IP\" as ioc_type\n| lookup ioc_source, ioc_description from shared/threat_hunting/iocs on ioc=SourceIp, ioc_type=ioc_type\n| where (!isNull(ioc_source))\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n| count as Total SourceIp\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 13,
                                    "y": 2,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14338986,\"name\":\"Threat Hunting - Sysmon - 03: Network Connection\",\"key\":\"5xyd2bFVa3CQUac5iLNmhDIvFMIdE3QA8QJTOCMTrY6K8X8OxATfIKvVVBEC\"}}}}}}}",
                                    "id": "7937398",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "SHA256 (PROCESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n\n| \"SHA256\" as ioc_type\n\n| ToUpperCase(hash_SHA256) as hash_SHA256_uc\n| lookup ioc_source as ioc_source_uc, ioc_description as ioc_description_uc from shared/threat_hunting/iocs on ioc=hash_SHA256_uc, ioc_type=ioc_type\n\n| ToLowerCase(hash_SHA256) as hash_SHA256_lc\n| lookup ioc_source as ioc_source_lc, ioc_description as ioc_description_lc from shared/threat_hunting/iocs on ioc=hash_SHA256_lc, ioc_type=ioc_type\n\n| where (!isNull(ioc_source_uc) or !isNull(ioc_source_lc))\n\n| if(!(IsEmpty(ioc_source_lc)), ioc_source_lc, ioc_source_uc) as ioc_source\n| if(!(IsEmpty(ioc_description_lc)), ioc_description_lc, ioc_description_uc) as ioc_description\n\n// aggregating all fields\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n| count as Total Hash_SHA256\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 2,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14399344,\"name\":\"Threat Hunting - Sysmon - 01: Process Creation\",\"key\":\"x3ecI1zAHW7CFSoAVZxRXzqpZtG9cQSaegErSpRosdjVG6QjejoKHMHYIs9T\"}}}}}}}",
                                    "id": "7937393",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "IP (EGRESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"true\"\n\n| \"IP\" as ioc_type\n| lookup ioc_source, ioc_description from shared/threat_hunting/iocs on ioc=DestinationIp, ioc_type=ioc_type\n| where (!isNull(ioc_source))\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n| count as Total DestinationIp\n\n{{post_filter}} // POST filter\n\n\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 2,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14338986,\"name\":\"Threat Hunting - Sysmon - 03: Network Connection\",\"key\":\"5xyd2bFVa3CQUac5iLNmhDIvFMIdE3QA8QJTOCMTrY6K8X8OxATfIKvVVBEC\"}}}}}}}",
                                    "id": "7937397",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "SHA256 (DRIVER)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 6;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_SHA256\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total Hash_SHA256\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 5,
                                    "y": 7,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14378939,\"name\":\"Threat Intel - Sysmon - 06: Driver loaded\",\"key\":\"4mvv4stmKpHthXak1klwwwZ8lvzt646LYlyRyQqMJOuvIZqkTSac03f0eYfw\"}}}}}}}",
                                    "id": "7937387",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "MD5 (IMAGE)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_MD5\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total Hash_MD5\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 11,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14408952,\"name\":\"Threat Intel - Sysmon - 07: Image loaded\",\"key\":\"J2tB5mZ8bxslyLJmOGzkJqLM6DSueb16pJITOfMzfaiKYmENi1zJGo8PxElq\"}}}}}}}",
                                    "id": "7937390",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "IP (INGRESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"false\"\n// THREAT INTEL LOOKUP\n// Scope: DestinationIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=SourceIp\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total SourceIp\n\n{{post_filter}} // POST filter\n\n\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 13,
                                    "y": 7,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14409533,\"name\":\"Threat Intel - Sysmon - 03: Network Connection\",\"key\":\"NwWMouF0I9mJSY8dBNqvNyWeeQGs2nPUO1OfTegYpyPvN4Yh4M510OorGW14\"}}}}}}}",
                                    "id": "7937254",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "IP (DNS RESPONSE)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregation\n| parse regex field=QueryResults \"(?<ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\" multi\n\n| lookup asn, organization from asn://default on ip=ip\n| lookup country_code, country_name, region, city from geo://location on ip = ip\n\n| ToLowerCase(QueryName) as QueryName\n\n| \"IP\" as ioc_type\n| lookup ioc_source, ioc_description from shared/threat_hunting/iocs on ioc=ip, ioc_type=ioc_type\n| where (!isNull(ioc_source))\n\n| count as ip\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 21,
                                    "y": 2,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14379544,\"name\":\"Threat Hunting - Sysmon - 22: DNSEvent (DNS query)\",\"key\":\"CXGt4CL0JchZXgBMmmgOJ8r9UVRjGqNzogBCkznwP0qEsD4mUIqTzODbMBBn\"}}}}}}}",
                                    "id": "7937400",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "MD5 (PROCESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_MD5 = \"-\")\n| ToLowerCase(hash_MD5) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_MD5\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total hash_MD5\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 11,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14257341,\"name\":\"Threat Intel - Sysmon - 01: Process Creation\",\"key\":\"AqoITzxDYMLu8nRt60uF59vWwz1xxTSjrSY2PrlNUziiM4CPOjnEod1rhaRE\"}}}}}}}",
                                    "id": "7937250",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "MD5 (PROCESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n\n| \"MD5\" as ioc_type\n\n| ToUpperCase(hash_MD5) as hash_MD5_uc\n| lookup ioc_source as ioc_source_uc, ioc_description as ioc_description_uc from shared/threat_hunting/iocs on ioc=hash_MD5_uc, ioc_type=ioc_type\n\n| ToLowerCase(hash_MD5) as hash_MD5_lc\n| lookup ioc_source as ioc_source_lc, ioc_description as ioc_description_lc from shared/threat_hunting/iocs on ioc=hash_MD5_lc, ioc_type=ioc_type\n\n| where (!isNull(ioc_source_uc) or !isNull(ioc_source_lc))\n\n| if(!(IsEmpty(ioc_source_lc)), ioc_source_lc, ioc_source_uc) as ioc_source\n| if(!(IsEmpty(ioc_description_lc)), ioc_description_lc, ioc_description_uc) as ioc_description\n\n// aggregating all fields\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n| count as Total  hash_MD5\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 5,
                                    "y": 2,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14399344,\"name\":\"Threat Hunting - Sysmon - 01: Process Creation\",\"key\":\"x3ecI1zAHW7CFSoAVZxRXzqpZtG9cQSaegErSpRosdjVG6QjejoKHMHYIs9T\"}}}}}}}",
                                    "id": "7937395",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "DOMAIN (DNS QUERY)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// THREAT INTEL LOOKUP\n// Scope: QueryName\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=QueryName\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total QueryName\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 21,
                                    "y": 11,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14388844,\"name\":\"Threat Intel - Sysmon - 22: DNSEvent (DNS query)\",\"key\":\"oKLxAFvpmtaxlQN5muANolamhA7D7CL01c8UUslHiiFd4YgR0FH8oGCbLyF1\"}}}}}}}",
                                    "id": "7937391",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "DOMAIN (DNS QUERY)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n| ToLowerCase(QueryName) as QueryName\n\n| \"DOMAIN\" as ioc_type\n| lookup ioc_source, ioc_description from shared/threat_hunting/iocs on ioc=QueryName, ioc_type=ioc_type\n| where (!isNull(ioc_source))\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total QueryName\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 17,
                                    "y": 2,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14379544,\"name\":\"Threat Hunting - Sysmon - 22: DNSEvent (DNS query)\",\"key\":\"CXGt4CL0JchZXgBMmmgOJ8r9UVRjGqNzogBCkznwP0qEsD4mUIqTzODbMBBn\"}}}}}}}",
                                    "id": "7937399",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "MD5 (DRIVER)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 6;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_MD5\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total Hash_MD5\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 5,
                                    "y": 11,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4DC2FF\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14378939,\"name\":\"Threat Intel - Sysmon - 06: Driver loaded\",\"key\":\"4mvv4stmKpHthXak1klwwwZ8lvzt646LYlyRyQqMJOuvIZqkTSac03f0eYfw\"}}}}}}}",
                                    "id": "7937388",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "IP (DNS RESPONSE)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregation\n| parse regex field=QueryResults \"(?<ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\" multi\n\n| lookup asn, organization from asn://default on ip=ip\n| lookup country_code, country_name, region, city from geo://location on ip = ip\n\n// THREAT INTEL LOOKUP\n// Scope: SourceIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=ip\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n| count as Total ip\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 21,
                                    "y": 7,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14388844,\"name\":\"Threat Intel - Sysmon - 22: DNSEvent (DNS query)\",\"key\":\"oKLxAFvpmtaxlQN5muANolamhA7D7CL01c8UUslHiiFd4YgR0FH8oGCbLyF1\"}}}}}}}",
                                    "id": "7937392",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Threat Intel (CS Threat Feed IOC Found)",
                                    "viewerType": "title",
                                    "detailLevel": 2,
                                    "queryString": "",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1m"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 6,
                                    "width": 24,
                                    "height": 1,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7937377",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": []
                                },
                                {
                                    "name": "Threat Hunting (Custom IOC Found)",
                                    "viewerType": "title",
                                    "detailLevel": 2,
                                    "queryString": "",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1m"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 24,
                                    "height": 1,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7937378",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": []
                                },
                                {
                                    "name": "DOMAIN (INGRESS)",
                                    "viewerType": "svv",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"false\"\n| where !(SourceHostname=\"-\")\n| where !(SourceHostname=\".\")\n// THREAT INTEL LOOKUP\n// Scope: DestinationIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=SourceHostname\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total SourceHostname\n\n{{post_filter}} // POST filter\n\n\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 13,
                                    "y": 11,
                                    "width": 4,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":\"#4dc2ff\",\"backgroundColorEnabled\":true,\"noDataBehavior\":{\"enabled\":true,\"color\":\"#cccccc\",\"value\":0,\"isString\":false},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":[{\"color\":\"#ff4141\",\"min\":\"1\",\"max\":null}]},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":14409533,\"name\":\"Threat Intel - Sysmon - 03: Network Connection\",\"key\":\"NwWMouF0I9mJSY8dBNqvNyWeeQGs2nPUO1OfTegYpyPvN4Yh4M510OorGW14\"}}}}}}}",
                                    "id": "7937292",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7937400",
                                        "7937399",
                                        "7937395",
                                        "7937392",
                                        "7937251",
                                        "7937398",
                                        "7937388",
                                        "7937254",
                                        "7937390",
                                        "7937250",
                                        "7937387",
                                        "7937397",
                                        "7937249",
                                        "7937393",
                                        "7937292",
                                        "7937389",
                                        "7937255",
                                        "7937391"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7937400",
                                        "7937399",
                                        "7937395",
                                        "7937392",
                                        "7937251",
                                        "7937398",
                                        "7937388",
                                        "7937254",
                                        "7937390",
                                        "7937250",
                                        "7937387",
                                        "7937397",
                                        "7937249",
                                        "7937393",
                                        "7937292",
                                        "7937389",
                                        "7937255",
                                        "7937391"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "FolderSyncDefinition",
                    "name": "Individual Events",
                    "description": "",
                    "children": [
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 01: Process creation",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "ParentImage",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total ParentImage\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 18,
                                    "y": 5,
                                    "width": 7,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7833129",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7833126",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "ParentCommandLine",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total ParentCommandLine\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 13,
                                    "y": 9,
                                    "width": 12,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7833131",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Process Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total CurrentDirectory, OriginalFileName, Company, Product, Description\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 19,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7833125",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "User",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total User\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7833127",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832888",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, FileVersion, Description, Product, Company, OriginalFileName, CommandLine, CurrentDirectory, User, LogonGuid, LogonId, TerminalSessionId, IntegrityLevel, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH, ParentProcessGuid, ParentProcessId, ParentImage, ParentCommandLine\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 14,
                                    "width": 24,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832884",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "CommandLine",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total CommandLine\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 12,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7833130",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 5,
                                    "width": 7,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7833128",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7833126",
                                        "7833131",
                                        "7833127",
                                        "7833130",
                                        "7833128",
                                        "7832888",
                                        "7832884",
                                        "7833125",
                                        "7833129"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7833126",
                                        "7833131",
                                        "7833127",
                                        "7833130",
                                        "7833128",
                                        "7832888",
                                        "7832884",
                                        "7833125",
                                        "7833129"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 02: A process changed a file creation time",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 2;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPreviousCreationUtcTime\\:\\s(?<PreviousCreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, TargetFilename, CreationUtcTime, PreviousCreationUtcTime\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846082",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 2;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPreviousCreationUtcTime\\:\\s(?<PreviousCreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846083",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 2;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPreviousCreationUtcTime\\:\\s(?<PreviousCreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 19,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846198",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 2;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPreviousCreationUtcTime\\:\\s(?<PreviousCreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846197",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "TargetFileName",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 2;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPreviousCreationUtcTime\\:\\s(?<PreviousCreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total TargetFilename\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 19,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846199",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846198",
                                        "7846197",
                                        "7846083",
                                        "7846199",
                                        "7846082"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846198",
                                        "7846197",
                                        "7846083",
                                        "7846199",
                                        "7846082"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 03: Network connection",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "SourceIp",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total SourceIp\n| order by Total\n\n| lookup asn, organization from asn://default on ip=SourceIp\n| lookup country_code, country_name, region, city from geo://location on ip = SourceIp\n\n| fields SourceIp, asn, organization, country_code, country_name, region, city, Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 1,
                                    "width": 14,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846206",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Number of DestinationIP per DestinationPort",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total DestinationPort, DestinationPortName, DestinationIp\n| count as Total DestinationPort, DestinationPortName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846228",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846201",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846202",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "DestinationIp",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total DestinationIp\n| order by Total\n\n| lookup asn, organization from asn://default on ip=DestinationIp\n| lookup country_code, country_name, region, city from geo://location on ip = DestinationIp\n\n| fields DestinationIp, asn, organization, country_code, country_name, region, city, Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 5,
                                    "width": 14,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846207",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "User",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total User\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846204",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Protocol",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Protocol\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 9,
                                    "width": 5,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846225",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, User, Protocol, Initiated, SourceIsIpv6, SourceIp, SourceHostname, SourcePort, SourcePortName, DestinationIsIpv6, DestinationIp, DestinationHostname, DestinationPort, DestinationPortName\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 12,
                                    "width": 24,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846200",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Initiated",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Initiated\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 5,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846224",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 9,
                                    "width": 14,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846205",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846205",
                                        "7846204",
                                        "7846207",
                                        "7846225",
                                        "7846200",
                                        "7846202",
                                        "7846228",
                                        "7846206",
                                        "7846224",
                                        "7846201"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846205",
                                        "7846204",
                                        "7846207",
                                        "7846225",
                                        "7846200",
                                        "7846202",
                                        "7846228",
                                        "7846206",
                                        "7846224",
                                        "7846201"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 04: Sysmon service state changed",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 6,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846740",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "SchemaVersion",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total SchemaVersion\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 19,
                                    "y": 1,
                                    "width": 6,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846744",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "State",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total State\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 7,
                                    "y": 1,
                                    "width": 6,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846742",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Version",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Version\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 13,
                                    "y": 1,
                                    "width": 6,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846743",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, State, Version, SchemaVersion\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 6,
                                    "width": 24,
                                    "height": 12,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846733",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846740",
                                        "7846742",
                                        "7846733",
                                        "7846744",
                                        "7846743"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846740",
                                        "7846742",
                                        "7846733",
                                        "7846744",
                                        "7846743"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 05: Process terminated",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 5;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846746",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 5;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846769",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 5;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 19,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846771",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 5;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874134",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846771",
                                        "7874134",
                                        "7846746",
                                        "7846769"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846771",
                                        "7874134",
                                        "7846746",
                                        "7846769"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 06: Driver loaded",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 6;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ImageLoaded, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH, Signed, Signature, SignatureStatus\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 11,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846778",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 6;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 6,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846803",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "ImageLoaded",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 6;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total ImageLoaded, Signed, Signature, SignatureStatus\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 7,
                                    "y": 1,
                                    "width": 18,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846805",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 6;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 6,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846825",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846778",
                                        "7846805",
                                        "7846825",
                                        "7846803"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846778",
                                        "7846805",
                                        "7846825",
                                        "7846803"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 07: Image loaded",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 6,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846831",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, ImageLoaded, FileVersion, Description, Product, Company, OriginalFileName, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH, Signed, Signature, SignatureStatus\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 11,
                                    "width": 24,
                                    "height": 9,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846830",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "ImageLoaded, OriginalFileName, FileVersion, Description, Product, Company",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total ImageLoaded, OriginalFileName, FileVersion, Description, Product, Company\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 6,
                                    "width": 24,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846865",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 13,
                                    "y": 1,
                                    "width": 12,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846834",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 7,
                                    "y": 1,
                                    "width": 6,
                                    "height": 5,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7846876",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846876",
                                        "7846834",
                                        "7846865",
                                        "7846831",
                                        "7846830"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7846876",
                                        "7846834",
                                        "7846865",
                                        "7846831",
                                        "7846830"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 08: CreateRemoteThread",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "TargetImage",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 8;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGuid\\:\\s(?<SourceProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGuid\\:\\s(?<TargetProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewThreadId\\:\\s(?<NewThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartAddress\\:\\s(?<StartAddress>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartModule\\:\\s(?<StartModule>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartFunction\\:\\s(?<StartFunction>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total TargetImage\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 12,
                                    "y": 1,
                                    "width": 7,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874128",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "StartModule",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 8;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGuid\\:\\s(?<SourceProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGuid\\:\\s(?<TargetProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewThreadId\\:\\s(?<NewThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartAddress\\:\\s(?<StartAddress>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartModule\\:\\s(?<StartModule>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartFunction\\:\\s(?<StartFunction>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total StartModule\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 19,
                                    "y": 1,
                                    "width": 6,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874129",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 8;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGuid\\:\\s(?<SourceProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGuid\\:\\s(?<TargetProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewThreadId\\:\\s(?<NewThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartAddress\\:\\s(?<StartAddress>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartModule\\:\\s(?<StartModule>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartFunction\\:\\s(?<StartFunction>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874078",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 8;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGuid\\:\\s(?<SourceProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGuid\\:\\s(?<TargetProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewThreadId\\:\\s(?<NewThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartAddress\\:\\s(?<StartAddress>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartModule\\:\\s(?<StartModule>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartFunction\\:\\s(?<StartFunction>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874077",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 8;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGuid\\:\\s(?<SourceProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGuid\\:\\s(?<TargetProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewThreadId\\:\\s(?<NewThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartAddress\\:\\s(?<StartAddress>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartModule\\:\\s(?<StartModule>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartFunction\\:\\s(?<StartFunction>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, SourceProcessGuid, SourceProcessId, SourceImage, TargetProcessGuid, TargetProcessId, TargetImage, NewThreadId, StartAddress, StartModule, StartFunction\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874130",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "SourceImage",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 8;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGuid\\:\\s(?<SourceProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGuid\\:\\s(?<TargetProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewThreadId\\:\\s(?<NewThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartAddress\\:\\s(?<StartAddress>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartModule\\:\\s(?<StartModule>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartFunction\\:\\s(?<StartFunction>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total SourceImage\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 6,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874127",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874127",
                                        "7874128",
                                        "7874078",
                                        "7874077",
                                        "7874130",
                                        "7874129"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874127",
                                        "7874128",
                                        "7874078",
                                        "7874077",
                                        "7874130",
                                        "7874129"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 09: RawAccessRead",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 9;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDevice\\:\\s(?<Device>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874132",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Device",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 9;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDevice\\:\\s(?<Device>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Device\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 19,
                                    "y": 1,
                                    "width": 6,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874136",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 9;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDevice\\:\\s(?<Device>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, Device\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 9,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874131",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 9;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDevice\\:\\s(?<Device>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 13,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874135",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 9;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDevice\\:\\s(?<Device>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874133",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874133",
                                        "7874135",
                                        "7874132",
                                        "7874131",
                                        "7874136"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874133",
                                        "7874135",
                                        "7874132",
                                        "7874131",
                                        "7874136"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 10: ProcessAccess",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 10;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGUID\\:\\s(?<SourceProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceThreadId\\:\\s(?<SourceThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGUID\\:\\s(?<TargetProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nGrantedAccess\\:\\s(?<GrantedAccess>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCallTrace\\:\\s(?<CallTrace>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, SourceProcessGUID, SourceProcessId, SourceThreadId, SourceImage, TargetProcessGUID, TargetProcessId, TargetImage, GrantedAccess, CallTrace\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 9,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874138",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "SourceImage",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 10;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGUID\\:\\s(?<SourceProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceThreadId\\:\\s(?<SourceThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGUID\\:\\s(?<TargetProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nGrantedAccess\\:\\s(?<GrantedAccess>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCallTrace\\:\\s(?<CallTrace>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total SourceImage\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 9,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874141",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "TargetImage",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 10;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGUID\\:\\s(?<SourceProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceThreadId\\:\\s(?<SourceThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGUID\\:\\s(?<TargetProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nGrantedAccess\\:\\s(?<GrantedAccess>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCallTrace\\:\\s(?<CallTrace>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total TargetImage\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 15,
                                    "y": 1,
                                    "width": 10,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874231",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 10;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGUID\\:\\s(?<SourceProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceThreadId\\:\\s(?<SourceThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGUID\\:\\s(?<TargetProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nGrantedAccess\\:\\s(?<GrantedAccess>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCallTrace\\:\\s(?<CallTrace>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874140",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 10;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGUID\\:\\s(?<SourceProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceThreadId\\:\\s(?<SourceThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGUID\\:\\s(?<TargetProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nGrantedAccess\\:\\s(?<GrantedAccess>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCallTrace\\:\\s(?<CallTrace>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874139",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874138",
                                        "7874139",
                                        "7874231",
                                        "7874141",
                                        "7874140"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874138",
                                        "7874139",
                                        "7874231",
                                        "7874141",
                                        "7874140"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 11: FileCreate",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 11;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, TargetFilename, CreationUtcTime\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874232",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 11;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874235",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 11;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874233",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "TargetFilename",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 11;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total TargetFilename\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 14,
                                    "y": 1,
                                    "width": 11,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874241",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 11;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 8,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874240",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874241",
                                        "7874240",
                                        "7874235",
                                        "7874232",
                                        "7874233"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874241",
                                        "7874240",
                                        "7874235",
                                        "7874232",
                                        "7874233"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 12: RegistryEvent (Object create and delete)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "EventType",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 12;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total EventType\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 7,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874472",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 12;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, ProcessGuid, ProcessId, Image, TargetObject\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874246",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 12;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874322",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 12;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 7,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874484",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "TargetObject",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 12;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total TargetObject\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 13,
                                    "y": 1,
                                    "width": 12,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874485",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 12;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7874402",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874485",
                                        "7874322",
                                        "7874402",
                                        "7874246",
                                        "7874484",
                                        "7874472"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7874485",
                                        "7874322",
                                        "7874402",
                                        "7874246",
                                        "7874484",
                                        "7874472"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 13: RegistryEvent (Value Set)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 13;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDetails\\:\\s(?<Details>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910611",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 13;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDetails\\:\\s(?<Details>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, ProcessGuid, ProcessId, Image, TargetObject, Details\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 9,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910609",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "EventType",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 13;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDetails\\:\\s(?<Details>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total EventType\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910613",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 13;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDetails\\:\\s(?<Details>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910612",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "TargetObject, Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 13;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDetails\\:\\s(?<Details>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total TargetObject, Details\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 19,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910615",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 13;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDetails\\:\\s(?<Details>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 1,
                                    "width": 14,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910614",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910609",
                                        "7910614",
                                        "7910613",
                                        "7910615",
                                        "7910612",
                                        "7910611"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910609",
                                        "7910614",
                                        "7910613",
                                        "7910615",
                                        "7910612",
                                        "7910611"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 14: RegistryEvent (Key and Value Rename)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "TargetObject, NewName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 14;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewName\\:\\s(?<NewName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total TargetObject, NewName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 12,
                                    "y": 1,
                                    "width": 13,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910626",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 14;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewName\\:\\s(?<NewName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910622",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 14;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewName\\:\\s(?<NewName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910621",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 14;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewName\\:\\s(?<NewName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 6,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910624",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 14;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewName\\:\\s(?<NewName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, TargetObject, NewName\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 9,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910619",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910621",
                                        "7910624",
                                        "7910626",
                                        "7910619",
                                        "7910622"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910621",
                                        "7910624",
                                        "7910626",
                                        "7910619",
                                        "7910622"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 15: FileCreateStreamHash",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 15;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHash\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, TargetFilename, CreationUtcTime, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 10,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910668",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 15;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHash\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 9,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910671",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 15;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHash\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910670",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "TargetFilename",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 15;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHash\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total TargetFilename\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 15,
                                    "y": 1,
                                    "width": 10,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910672",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 15;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHash\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910669",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910669",
                                        "7910670",
                                        "7910668",
                                        "7910671",
                                        "7910672"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910669",
                                        "7910670",
                                        "7910668",
                                        "7910671",
                                        "7910672"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 16: Sysmon configuration change",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 16;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_SHA1\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, Configuration, ConfigurationFileHash, hash_SHA1\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 9,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910679",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "ConfigurationFileHash",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 16;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_SHA1\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total hash_SHA1\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 13,
                                    "y": 1,
                                    "width": 12,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910688",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Configuration",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 16;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_SHA1\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Configuration\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 7,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910687",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 16;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_SHA1\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910685",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 16;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_SHA1\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910686",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910686",
                                        "7910687",
                                        "7910688",
                                        "7910685",
                                        "7910679"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910686",
                                        "7910687",
                                        "7910688",
                                        "7910685",
                                        "7910679"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 17: PipeEvent (Pipe Created)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 17;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910691",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 17;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910690",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 17;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 1,
                                    "width": 14,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910694",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "PipeName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 17;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total PipeName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 19,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910693",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 17;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, ProcessGuid, PipeName, Image\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910689",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "EventType",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 17;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total EventType\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910692",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910692",
                                        "7910691",
                                        "7910689",
                                        "7910690",
                                        "7910694",
                                        "7910693"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910692",
                                        "7910691",
                                        "7910689",
                                        "7910690",
                                        "7910694",
                                        "7910693"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 18: PipeEvent (Pipe Connected)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 18;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910809",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 18;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 19,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910812",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "EventType",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 18;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total EventType\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 6,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910810",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 18;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, ProcessGuid, PipeName, Image\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 10,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910695",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "PipeName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 18;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total PipeName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 12,
                                    "y": 1,
                                    "width": 13,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910811",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 18;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910765",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910812",
                                        "7910809",
                                        "7910811",
                                        "7910810",
                                        "7910695",
                                        "7910765"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910812",
                                        "7910809",
                                        "7910811",
                                        "7910810",
                                        "7910695",
                                        "7910765"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 19: WmiEvent (WmiEventFilter activity detected)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910818",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Query",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Query\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 16,
                                    "y": 5,
                                    "width": 9,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910825",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "EventNamespace",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total EventNamespace\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910823",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "EventType",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total EventType\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910820",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "User",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total User\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910822",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, Operation, User, EventNamespace, Name, Query\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 9,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910817",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Operation",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Operation\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910821",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910819",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Name",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n{{post_filter}} // POST filter\n\n| count as Total Name\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 16,
                                    "y": 1,
                                    "width": 9,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7910824",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910823",
                                        "7910822",
                                        "7910817",
                                        "7910821",
                                        "7910825",
                                        "7910824",
                                        "7910818",
                                        "7910820",
                                        "7910819"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7910823",
                                        "7910822",
                                        "7910817",
                                        "7910821",
                                        "7910825",
                                        "7910824",
                                        "7910818",
                                        "7910820",
                                        "7910819"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 20: WmiEvent (WmiEventConsumer activity detected)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 20;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934000",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "EventType",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 20;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total EventType\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934003",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Operation",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 20;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Operation\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934004",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 20;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934002",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "User",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 20;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total User\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 1,
                                    "width": 5,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934005",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Name, destinationType, Destination",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 20;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Name, destinationType, Destination\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 16,
                                    "y": 1,
                                    "width": 9,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934006",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 20;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, Operation, User, Name, destinationType, Destination\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 6,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7933999",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934003",
                                        "7933999",
                                        "7934006",
                                        "7934000",
                                        "7934005",
                                        "7934004",
                                        "7934002"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934003",
                                        "7933999",
                                        "7934006",
                                        "7934000",
                                        "7934005",
                                        "7934004",
                                        "7934002"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 21: WmiEvent (WmiEventConsumerToFilter activity detected)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Operation",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 21;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Operation\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934017",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 21;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, Operation, User, Consumer, Filter\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934007",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Consumer, Filter",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 21;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Consumer, Filter\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 16,
                                    "y": 1,
                                    "width": 9,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934019",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 21;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934009",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 21;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934008",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "User",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 21;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total User\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 1,
                                    "width": 5,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934018",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "EventType",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 21;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total EventType\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934010",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934010",
                                        "7934017",
                                        "7934009",
                                        "7934008",
                                        "7934019",
                                        "7934007",
                                        "7934018"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934010",
                                        "7934017",
                                        "7934009",
                                        "7934008",
                                        "7934019",
                                        "7934007",
                                        "7934018"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 22: DNSEvent (DNS query)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "QueryResults",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n// aggregation\n| parse regex field=QueryResults \"(?<ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\" multi\n| count as Total ip\n| order by Total\n\n| lookup asn, organization from asn://default on ip=ip\n| lookup country_code, country_name, region, city from geo://location on ip = ip\n\n| fields ip, asn, organization, country_code, country_name, region, city, Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 5,
                                    "width": 19,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934025",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934021",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "QueryName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total QueryName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 15,
                                    "y": 1,
                                    "width": 10,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934023",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934022",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 9,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934024",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, QueryName, QueryStatus, QueryResults, Image\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934020",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934021",
                                        "7934024",
                                        "7934025",
                                        "7934022",
                                        "7934020",
                                        "7934023"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934021",
                                        "7934024",
                                        "7934025",
                                        "7934022",
                                        "7934020",
                                        "7934023"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 23: FileDelete (A file delete was detected)",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 23;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIsExecutable\\:\\s(?<IsExecutable>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nArchived\\:\\s(?<Archived>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, User, Image, TargetFilename, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH, IsExecutable, Archived\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 9,
                                    "width": 24,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934026",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 23;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIsExecutable\\:\\s(?<IsExecutable>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nArchived\\:\\s(?<Archived>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934028",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Image",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 23;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIsExecutable\\:\\s(?<IsExecutable>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nArchived\\:\\s(?<Archived>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Image\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 1,
                                    "width": 14,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934030",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "TargetFilename, IsExecutable, Archived",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 23;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIsExecutable\\:\\s(?<IsExecutable>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nArchived\\:\\s(?<Archived>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total TargetFilename, IsExecutable, Archived\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 5,
                                    "width": 14,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934031",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 23;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIsExecutable\\:\\s(?<IsExecutable>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nArchived\\:\\s(?<Archived>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934027",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "User",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 23;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIsExecutable\\:\\s(?<IsExecutable>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nArchived\\:\\s(?<Archived>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total User\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 5,
                                    "height": 8,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934029",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934028",
                                        "7934027",
                                        "7934030",
                                        "7934026",
                                        "7934031",
                                        "7934029"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934028",
                                        "7934027",
                                        "7934030",
                                        "7934026",
                                        "7934031",
                                        "7934029"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - 255: Error",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "Details",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 255;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ID, Description\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 24,
                                    "height": 11,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934049",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Computer",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 255;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total Computer\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934051",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "RuleName",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 255;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total RuleName\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 6,
                                    "y": 1,
                                    "width": 5,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934052",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "ID, Description",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 255;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n| count as Total ID, Description\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 11,
                                    "y": 1,
                                    "width": 14,
                                    "height": 4,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7934053",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934053",
                                        "7934051",
                                        "7934052",
                                        "7934049"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7934053",
                                        "7934051",
                                        "7934052",
                                        "7934049"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "FolderSyncDefinition",
                    "name": "Operations",
                    "description": "",
                    "children": [
                        {
                            "type": "DashboardSyncDefinition",
                            "name": "Sysmon - Service Overview",
                            "description": "",
                            "detailLevel": 0,
                            "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                            "panels": [
                                {
                                    "name": "ID",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 255;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n// aggregating all fields\n| count as Total ID\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 19,
                                    "width": 8,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832902",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Latest Events",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n// aggregating all fields\n| count date, Computer, CategoryString, State, Version, SchemaVersion\n\n| order by date\n| fields -_count",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 2,
                                    "width": 16,
                                    "height": 9,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832910",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Latest Events",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 255;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n// aggregating all fields\n| count date, Computer, CategoryString, ID, Description\n\n| order by date\n| fields -_count",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 19,
                                    "width": 16,
                                    "height": 6,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832913",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Version",
                                    "viewerType": "bar",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total Version",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 5,
                                    "width": 8,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":5,\"overrides\":null},\"legend\":{\"enabled\":false,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832892",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "SchemaVersion",
                                    "viewerType": "bar",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total SchemaVersion",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 8,
                                    "width": 8,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":6,\"overrides\":null},\"legend\":{\"enabled\":false,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832896",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "State",
                                    "viewerType": "bar",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n{{post_filter}} // POST filter\n\n| count as Total State",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 2,
                                    "width": 8,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":8,\"overrides\":null},\"legend\":{\"enabled\":false,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":8,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{\"Total\":{\"chartType\":\"column\",\"yAxis\":0}},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832893",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Configuration Hash",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 16;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_SHA1\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n// aggregating all fields\n| count as Total hash_SHA1\n| order by Total\n",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 15,
                                    "width": 8,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":5,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832894",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Errors",
                                    "viewerType": "title",
                                    "detailLevel": 2,
                                    "queryString": "",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1m"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 18,
                                    "width": 24,
                                    "height": 1,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832912",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": []
                                },
                                {
                                    "name": "Configuration Path",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 16;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_SHA1\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n\n{{post_filter}} // POST filter\n\n// aggregating all fields\n| count as Total Configuration\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 12,
                                    "width": 8,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":5,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832911",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Service State Change",
                                    "viewerType": "title",
                                    "detailLevel": 2,
                                    "queryString": "",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1m"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 1,
                                    "width": 24,
                                    "height": 1,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832898",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": []
                                },
                                {
                                    "name": "Configuration Change",
                                    "viewerType": "title",
                                    "detailLevel": 2,
                                    "queryString": "",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1m"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 11,
                                    "width": 24,
                                    "height": 1,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832899",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": []
                                },
                                {
                                    "name": "Latest Events",
                                    "viewerType": "table",
                                    "detailLevel": 2,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 16;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_SHA1\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n// aggregating all fields\n| count date, Computer, CategoryString, Configuration, hash_SHA1\n\n| order by date\n| fields -_count",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 9,
                                    "y": 12,
                                    "width": 16,
                                    "height": 6,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832908",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Description",
                                    "viewerType": "table",
                                    "detailLevel": 0,
                                    "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 255;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n{{post_filter}} // POST filter\n\n// aggregating all fields\n| count as Total Description\n| order by Total",
                                    "metricsQueries": [],
                                    "timeRange": {
                                        "type": "BeginBoundedTimeRange",
                                        "from": {
                                            "type": "RelativeTimeRangeBoundary",
                                            "relativeTime": "-1d"
                                        },
                                        "to": null
                                    },
                                    "x": 1,
                                    "y": 22,
                                    "width": 8,
                                    "height": 3,
                                    "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                                    "id": "7832905",
                                    "desiredQuantizationInSecs": 0,
                                    "queryParameters": [
                                        {
                                            "name": "post_filter",
                                            "label": "post_filter",
                                            "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "//",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        },
                                        {
                                            "name": "pre_filter",
                                            "label": "pre_filter",
                                            "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                            "dataType": "QUERY_FRAGMENT",
                                            "value": "*",
                                            "autoComplete": {
                                                "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                                "autoCompleteKey": null,
                                                "autoCompleteValues": [],
                                                "lookupFileName": null,
                                                "lookupLabelColumn": null,
                                                "lookupValueColumn": null
                                            }
                                        }
                                    ]
                                }
                            ],
                            "filters": [
                                {
                                    "fieldName": "pre_filter",
                                    "label": "pre_filter",
                                    "defaultValue": "*",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7832911",
                                        "7832893",
                                        "7832892",
                                        "7832896",
                                        "7832905",
                                        "7832902",
                                        "7832913",
                                        "7832910",
                                        "7832894",
                                        "7832908"
                                    ]
                                },
                                {
                                    "fieldName": "post_filter",
                                    "label": "post_filter",
                                    "defaultValue": "//",
                                    "filterType": "textbox",
                                    "properties": "",
                                    "panelIds": [
                                        "7832911",
                                        "7832893",
                                        "7832892",
                                        "7832896",
                                        "7832905",
                                        "7832902",
                                        "7832913",
                                        "7832910",
                                        "7832894",
                                        "7832908"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "FolderSyncDefinition",
            "name": "Queries",
            "description": "",
            "children": [
                {
                    "type": "FolderSyncDefinition",
                    "name": "Global Search",
                    "description": "",
                    "children": [
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - All Events (All Fields Extracted)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nArchived\\:\\s(?<Archived>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCallTrace\\:\\s(?<CallTrace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDetails\\:\\s(?<Details>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDevice\\:\\s(?<Device>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nGrantedAccess\\:\\s(?<GrantedAccess>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHash\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIsExecutable\\:\\s(?<IsExecutable>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewName\\:\\s(?<NewName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewThreadId\\:\\s(?<NewThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPreviousCreationUtcTime\\:\\s(?<PreviousCreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGuid\\:\\s(?<SourceProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGUID\\:\\s(?<SourceProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceThreadId\\:\\s(?<SourceThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartAddress\\:\\s(?<StartAddress>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartFunction\\:\\s(?<StartFunction>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartModule\\:\\s(?<StartModule>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGuid\\:\\s(?<TargetProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGUID\\:\\s(?<TargetProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n| format(\"%s\", \"-\") as hash_SHA1\n\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        }
                    ]
                },
                {
                    "type": "FolderSyncDefinition",
                    "name": "Individual Events",
                    "description": "",
                    "children": [
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 01: Process creation",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, FileVersion, Description, Product, Company, OriginalFileName, CommandLine, CurrentDirectory, User, LogonGuid, LogonId, TerminalSessionId, IntegrityLevel, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH, ParentProcessGuid, ParentProcessId, ParentImage, ParentCommandLine\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 02: A process changed a file creation time",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 2;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPreviousCreationUtcTime\\:\\s(?<PreviousCreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, TargetFilename, CreationUtcTime, PreviousCreationUtcTime\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 03: Network connection",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, User, Protocol, Initiated, SourceIsIpv6, SourceIp, SourceHostname, SourcePort, SourcePortName, DestinationIsIpv6, DestinationIp, DestinationHostname, DestinationPort, DestinationPortName\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 04: Sysmon service state changed",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 4;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nState\\:\\s(?<State>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nVersion\\:\\s(?<Version>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSchemaVersion\\:\\s(?<SchemaVersion>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, State, Version, SchemaVersion\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 05: Process terminated",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 5;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 06: Driver loaded",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 6;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ImageLoaded, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH, Signed, Signature, SignatureStatus\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 07: Image loaded",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, ImageLoaded, FileVersion, Description, Product, Company, OriginalFileName, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH, Signed, Signature, SignatureStatus\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 08: CreateRemoteThread",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 8;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGuid\\:\\s(?<SourceProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGuid\\:\\s(?<TargetProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewThreadId\\:\\s(?<NewThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartAddress\\:\\s(?<StartAddress>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartModule\\:\\s(?<StartModule>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nStartFunction\\:\\s(?<StartFunction>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, SourceProcessGuid, SourceProcessId, SourceImage, TargetProcessGuid, TargetProcessId, TargetImage, NewThreadId, StartAddress, StartModule, StartFunction\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 09: RawAccessRead",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 9;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDevice\\:\\s(?<Device>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, Device\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 10: ProcessAccess",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 10;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessGUID\\:\\s(?<SourceProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceProcessId\\:\\s(?<SourceProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceThreadId\\:\\s(?<SourceThreadId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceImage\\:\\s(?<SourceImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessGUID\\:\\s(?<TargetProcessGUID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetProcessId\\:\\s(?<TargetProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetImage\\:\\s(?<TargetImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nGrantedAccess\\:\\s(?<GrantedAccess>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCallTrace\\:\\s(?<CallTrace>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, SourceProcessGUID, SourceProcessId, SourceThreadId, SourceImage, TargetProcessGUID, TargetProcessId, TargetImage, GrantedAccess, CallTrace\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 11: FileCreate",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 11;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, TargetFilename, CreationUtcTime\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 12: RegistryEvent (Object create and delete)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 12;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, ProcessGuid, ProcessId, Image, TargetObject\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 13: RegistryEvent (Value Set)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 13;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDetails\\:\\s(?<Details>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, ProcessGuid, ProcessId, Image, TargetObject, Details\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 14: RegistryEvent (Key and Value Rename)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 14;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetObject\\:\\s(?<TargetObject>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nNewName\\:\\s(?<NewName>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, TargetObject, NewName\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 15: FileCreateStreamHash",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 15;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCreationUtcTime\\:\\s(?<CreationUtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHash\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, Image, TargetFilename, CreationUtcTime, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 16: Sysmon configuration change",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 16;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfiguration\\:\\s(?<Configuration>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConfigurationFileHash\\:\\s(?<ConfigurationFileHash>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_SHA1\n| parse regex field=ConfigurationFileHash \"SHA1\\=(?<hash_SHA1>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, Configuration, ConfigurationFileHash, hash_SHA1\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 17: PipeEvent (Pipe Created)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 17;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, ProcessGuid, PipeName, Image\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 18: PipeEvent (Pipe Connected)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 18;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nPipeName\\:\\s(?<PipeName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, ProcessGuid, PipeName, Image\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 19: WmiEvent (WmiEventFilter activity detected)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 19;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventNamespace\\:\\s+(?<EventNamespace>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQuery\\:\\s+(?<Query>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, Operation, User, EventNamespace, Name, Query\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 20: WmiEvent (WmiEventConsumer activity detected)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 20;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nName\\:\\s+(?<Name>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nType\\:\\s+(?<destinationType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestination\\:\\s+(?<Destination>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, Operation, User, Name, destinationType, Destination\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 21: WmiEvent (WmiEventConsumerToFilter activity detected)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 21;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nEventType\\:\\s(?<EventType>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOperation\\:\\s(?<Operation>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nConsumer\\:\\s(?<Consumer>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFilter\\:\\s+(?<Filter>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, EventType, UtcTime, Operation, User, Consumer, Filter\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 22: DNSEvent (DNS query)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, QueryName, QueryStatus, QueryResults, Image\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 23: FileDelete (A file delete was detected)",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 23;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTargetFilename\\:\\s(?<TargetFilename>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIsExecutable\\:\\s(?<IsExecutable>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nArchived\\:\\s(?<Archived>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ProcessGuid, ProcessId, User, Image, TargetFilename, Hashes, hash_MD5, hash_SHA256, hash_IMPHASH, IsExecutable, Archived\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Sysmon - 255: Error",
                            "search": {
                                "queryText": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 255;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nID\\:\\s(?<ID>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count date, Computer, EventCode, RecordNumber, Type, CategoryString, RuleName, UtcTime, ID, Description\n\n| order by date\n| fields -_count\n\n\n{{post_filter}} // POST filter\n",
                                "defaultTimeRange": "-24h",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [
                                    {
                                        "name": "pre_filter",
                                        "label": "pre_filter",
                                        "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "*",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    },
                                    {
                                        "name": "post_filter",
                                        "label": "post_filter",
                                        "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                        "dataType": "QUERY_FRAGMENT",
                                        "value": "//",
                                        "autoComplete": {
                                            "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                            "autoCompleteKey": null,
                                            "autoCompleteValues": [],
                                            "lookupFileName": null,
                                            "lookupLabelColumn": null,
                                            "lookupValueColumn": null
                                        }
                                    }
                                ],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        }
                    ]
                }
            ]
        },
        {
            "type": "FolderSyncDefinition",
            "name": "Threat Hunting",
            "description": "",
            "children": [
                {
                    "type": "FolderSyncDefinition",
                    "name": "IOC Management",
                    "description": "",
                    "children": [
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "1- Create IOCS lookup (shared/threat_hunting/iocs)",
                            "search": {
                                "queryText": "* | limit 1\n| \"127.0.0.1\" as ioc\n// ioc_type: IP, DOMAIN, SHA256, MD5\n// DOMAIN entries should be in lowercase\n// SHA265 and MD5 can be in lowercase or uppercase (but not both)\n| \"IP\" as ioc_type\n| \"Custom\" as ioc_source\n| \"This is a for testing only\" as ioc_description\n| count ioc, ioc_type, ioc_source, ioc_description\n| fields -_count\n\n| save shared/threat_hunting/iocs",
                                "defaultTimeRange": "-15m",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "2- Add new entry in IOCS lookup (shared/threat_hunting/iocs)",
                            "search": {
                                "queryText": "* | limit 1\n| \"127.0.0.2\" as ioc\n// ioc_type: IP, DOMAIN, SHA256, MD5\n// DOMAIN entries should be in lowercase\n// SHA265 and MD5 can be in lowercase or uppercase (but not both)\n| \"IP\" as ioc_type\n| \"Custom\" as ioc_source\n| \"This is a for testing only\" as ioc_description\n| count ioc, ioc_type, ioc_source, ioc_description\n| fields -_count\n\n| save append shared/threat_hunting/iocs",
                                "defaultTimeRange": "-15m",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "3- List content of IOCS lookup (shared/threat_hunting/iocs)",
                            "search": {
                                "queryText": "cat shared/threat_hunting/iocs\n// ioc_type: IP, DOMAIN, SHA256, MD5\n// DOMAIN entries should be in lowercase\n// SHA265 and MD5 can be in lowercase or uppercase (but not both)\n| count ioc, ioc_type, ioc_source, ioc_description\n| fields -_count\n| order by ioc",
                                "defaultTimeRange": "-15m",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "Manual"
                            },
                            "searchSchedule": null,
                            "description": ""
                        }
                    ]
                },
                {
                    "type": "DashboardSyncDefinition",
                    "name": "Threat Hunting - Sysmon - 01: Process Creation",
                    "description": "",
                    "detailLevel": 0,
                    "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                    "panels": [
                        {
                            "name": "Matched SHA256 Hash",
                            "viewerType": "table",
                            "detailLevel": 0,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n\n| \"SHA256\" as ioc_type\n\n| ToUpperCase(hash_SHA256) as hash_SHA256_uc\n| lookup ioc_source as ioc_source_uc, ioc_description as ioc_description_uc from shared/threat_hunting/iocs on ioc=hash_SHA256_uc, ioc_type=ioc_type\n\n| ToLowerCase(hash_SHA256) as hash_SHA256_lc\n| lookup ioc_source as ioc_source_lc, ioc_description as ioc_description_lc from shared/threat_hunting/iocs on ioc=hash_SHA256_lc, ioc_type=ioc_type\n\n| where (!isNull(ioc_source_uc) or !isNull(ioc_source_lc))\n\n| if(!(IsEmpty(ioc_source_lc)), ioc_source_lc, ioc_source_uc) as ioc_source\n| if(!(IsEmpty(ioc_description_lc)), ioc_description_lc, ioc_description_uc) as ioc_description\n\n// aggregating all fields\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n| count as Total date, Computer, RuleName, User, Hash_SHA256, ProcessId, Image, CommandLine, ioc_source, ioc_description \n| order by date\n\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1d"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 1,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7937223",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Matched MD5 Hash",
                            "viewerType": "table",
                            "detailLevel": 0,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n\n| \"MD5\" as ioc_type\n\n| ToUpperCase(hash_MD5) as hash_MD5_uc\n| lookup ioc_source as ioc_source_uc, ioc_description as ioc_description_uc from shared/threat_hunting/iocs on ioc=hash_MD5_uc, ioc_type=ioc_type\n\n| ToLowerCase(hash_MD5) as hash_MD5_lc\n| lookup ioc_source as ioc_source_lc, ioc_description as ioc_description_lc from shared/threat_hunting/iocs on ioc=hash_MD5_lc, ioc_type=ioc_type\n\n| where (!isNull(ioc_source_uc) or !isNull(ioc_source_lc))\n\n| if(!(IsEmpty(ioc_source_lc)), ioc_source_lc, ioc_source_uc) as ioc_source\n| if(!(IsEmpty(ioc_description_lc)), ioc_description_lc, ioc_description_uc) as ioc_description\n\n// aggregating all fields\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n| count as Total date, Computer, RuleName, User, hash_MD5, ProcessId, Image, CommandLine, ioc_source, ioc_description \n| order by date\n\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1d"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 8,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7937224",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        }
                    ],
                    "filters": [
                        {
                            "fieldName": "pre_filter",
                            "label": "pre_filter",
                            "defaultValue": "*",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7937223",
                                "7937224"
                            ]
                        },
                        {
                            "fieldName": "post_filter",
                            "label": "post_filter",
                            "defaultValue": "//",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7937223",
                                "7937224"
                            ]
                        }
                    ]
                },
                {
                    "type": "DashboardSyncDefinition",
                    "name": "Threat Hunting - Sysmon - 03: Network Connection",
                    "description": "",
                    "detailLevel": 0,
                    "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                    "panels": [
                        {
                            "name": "Egress Traffic to Matched IP Address",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"true\"\n\n| \"IP\" as ioc_type\n| lookup ioc_source, ioc_description from shared/threat_hunting/iocs on ioc=DestinationIp, ioc_type=ioc_type\n| where (!isNull(ioc_source))\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n| count as Total date, Computer, RuleName, User, ProcessId, Image, Protocol, SourceIp, SourceHostname, DestinationIp, DestinationHostname, DestinationPort, ioc_source, ioc_description \n\n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n\n\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 1,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7934470",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Ingress Traffic from Matched IP Address",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"false\"\n\n| \"IP\" as ioc_type\n| lookup ioc_source, ioc_description from shared/threat_hunting/iocs on ioc=SourceIp, ioc_type=ioc_type\n| where (!isNull(ioc_source))\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n| count as Total date, Computer, RuleName, User, ProcessId, Image, Protocol, SourceIp, SourceHostname, DestinationIp, DestinationHostname, DestinationPort, ioc_source, ioc_description \n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 8,
                            "width": 24,
                            "height": 8,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7934551",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        }
                    ],
                    "filters": [
                        {
                            "fieldName": "pre_filter",
                            "label": "pre_filter",
                            "defaultValue": "*",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7934470",
                                "7934551"
                            ]
                        },
                        {
                            "fieldName": "post_filter",
                            "label": "post_filter",
                            "defaultValue": "//",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7934470",
                                "7934551"
                            ]
                        }
                    ]
                },
                {
                    "type": "DashboardSyncDefinition",
                    "name": "Threat Hunting - Sysmon - 22: DNSEvent (DNS query)",
                    "description": "",
                    "detailLevel": 0,
                    "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                    "panels": [
                        {
                            "name": "Matched Domain in DNS Query",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n| ToLowerCase(QueryName) as QueryName\n\n| \"DOMAIN\" as ioc_type\n| lookup ioc_source, ioc_description from shared/threat_hunting/iocs on ioc=QueryName, ioc_type=ioc_type\n| where (!isNull(ioc_source))\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total date, Computer, RuleName, User, ProcessId, Image, QueryName,QueryResults, QueryStatus , ioc_source, ioc_description\n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 1,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7937232",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Matched IP Returned in DNS Query",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregation\n| parse regex field=QueryResults \"(?<ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\" multi\n\n| lookup asn, organization from asn://default on ip=ip\n| lookup country_code, country_name, region, city from geo://location on ip = ip\n\n| ToLowerCase(QueryName) as QueryName\n\n| \"IP\" as ioc_type\n| lookup ioc_source, ioc_description from shared/threat_hunting/iocs on ioc=ip, ioc_type=ioc_type\n| where (!isNull(ioc_source))\n\n| count as Total date, Computer, RuleName, ProcessId, image, QueryName, ip, asn, organization, country_code, country_name, region, city, ioc_source, ioc_description \n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 8,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7937233",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        }
                    ],
                    "filters": [
                        {
                            "fieldName": "pre_filter",
                            "label": "pre_filter",
                            "defaultValue": "*",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7937232",
                                "7937233"
                            ]
                        },
                        {
                            "fieldName": "post_filter",
                            "label": "post_filter",
                            "defaultValue": "//",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7937232",
                                "7937233"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "FolderSyncDefinition",
            "name": "Threat Intelligence",
            "description": "",
            "children": [
                {
                    "type": "DashboardSyncDefinition",
                    "name": "Threat Intel - Sysmon - 01: Process Creation",
                    "description": "",
                    "detailLevel": 0,
                    "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                    "panels": [
                        {
                            "name": "Suspicious SHA256 Hash",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_SHA256\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total date, Computer, RuleName, User, Hash_SHA256, ProcessId, Image, CommandLine, threat_malicious_confidence, threat_actor, threat_label \n| order by date\n\n| fields -Total\n\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 1,
                            "width": 24,
                            "height": 6,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7833329",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Suspicious MD5 Hash",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 1;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCommandLine\\:\\s(?<CommandLine>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCurrentDirectory\\:\\s(?<CurrentDirectory>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonGuid\\:\\s(?<LogonGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nLogonId\\:\\s(?<LogonId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nTerminalSessionId\\:\\s(?<TerminalSessionId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nIntegrityLevel\\:\\s(?<IntegrityLevel>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessGuid\\:\\s(?<ParentProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentProcessId\\:\\s(?<ParentProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentImage\\:\\s(?<ParentImage>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nParentCommandLine\\:\\s(?<ParentCommandLine>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_MD5 = \"-\")\n| ToLowerCase(hash_MD5) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_MD5\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total date, Computer, RuleName, User, hash_MD5, ProcessId, Image, CommandLine, threat_malicious_confidence, threat_actor, threat_label \n| order by date\n\n| fields -Total\n\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 7,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7833331",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        }
                    ],
                    "filters": [
                        {
                            "fieldName": "pre_filter",
                            "label": "pre_filter",
                            "defaultValue": "*",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7833329",
                                "7833331"
                            ]
                        },
                        {
                            "fieldName": "post_filter",
                            "label": "post_filter",
                            "defaultValue": "//",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7833329",
                                "7833331"
                            ]
                        }
                    ]
                },
                {
                    "type": "DashboardSyncDefinition",
                    "name": "Threat Intel - Sysmon - 03: Network Connection",
                    "description": "",
                    "detailLevel": 0,
                    "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                    "panels": [
                        {
                            "name": "Egress Traffic to Suspicious IP Address",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"true\"\n// THREAT INTEL LOOKUP\n// Scope: DestinationIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=DestinationIp\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total date, Computer, RuleName, User, ProcessId, Image, Protocol, SourceIp, SourceHostname, DestinationIp, DestinationHostname, DestinationPort, threat_malicious_confidence, threat_actor, threat_label \n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n\n\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 1,
                            "width": 24,
                            "height": 4,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7937244",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Ingress Traffic from Suspicious IP Address",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"false\"\n// THREAT INTEL LOOKUP\n// Scope: DestinationIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=SourceIp\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total date, Computer, RuleName, User, ProcessId, Image, Protocol, SourceIp, SourceHostname, DestinationIp, DestinationHostname, DestinationPort, threat_malicious_confidence, threat_actor, threat_label \n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n\n\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 5,
                            "width": 24,
                            "height": 4,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7937245",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Egress Traffic to Suspicious Hostname",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"true\"\n| where !(DestinationHostname=\"-\")\n\n// THREAT INTEL LOOKUP\n// Scope: DestinationIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=DestinationHostname\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total date, Computer, RuleName, User, ProcessId, Image, Protocol, SourceIp, SourceHostname, DestinationIp, DestinationHostname, DestinationPort, threat_malicious_confidence, threat_actor, threat_label \n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n\n\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 9,
                            "width": 24,
                            "height": 4,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7937246",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Ingress Traffic from Suspicious Hostname",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 3;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUser\\:\\s(?<User>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProtocol\\:\\s(?<Protocol>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nInitiated\\:\\s(?<Initiated>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIsIpv6\\:\\s(?<SourceIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceIp\\:\\s(?<SourceIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourceHostname\\:\\s(?<SourceHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePort\\:\\s(?<SourcePort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSourcePortName\\:\\s(?<SourcePortName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIsIpv6\\:\\s(?<DestinationIsIpv6>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationIp\\:\\s(?<DestinationIp>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationHostname\\:\\s(?<DestinationHostname>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPort\\:\\s(?<DestinationPort>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDestinationPortName\\:\\s(?<DestinationPortName>[^\\r]*)\\r\\n\" nodrop\n\n| where Initiated=\"false\"\n| where !(SourceHostname=\"-\")\n| where !(SourceHostname=\".\")\n// THREAT INTEL LOOKUP\n// Scope: DestinationIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=SourceHostname\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total date, Computer, RuleName, User, ProcessId, Image, Protocol, SourceIp, SourceHostname, DestinationIp, DestinationHostname, DestinationPort, threat_malicious_confidence, threat_actor, threat_label \n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n\n\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 13,
                            "width": 24,
                            "height": 4,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7937247",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        }
                    ],
                    "filters": [
                        {
                            "fieldName": "post_filter",
                            "label": "post_filter",
                            "defaultValue": "//",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7937244",
                                "7937245",
                                "7937246",
                                "7937247"
                            ]
                        },
                        {
                            "fieldName": "pre_filter",
                            "label": "pre_filter",
                            "defaultValue": "*",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7937244",
                                "7937245",
                                "7937246",
                                "7937247"
                            ]
                        }
                    ]
                },
                {
                    "type": "DashboardSyncDefinition",
                    "name": "Threat Intel - Sysmon - 06: Driver loaded",
                    "description": "",
                    "detailLevel": 0,
                    "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                    "panels": [
                        {
                            "name": "Suspicious SHA256 Hash",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 6;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_SHA256\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total date, Computer, RuleName, Hash_SHA256, ImageLoaded, threat_malicious_confidence, threat_actor, threat_label, Signed, Signature, SignatureStatus\n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 1,
                            "width": 24,
                            "height": 6,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7934559",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Suspicious MD5 Hash",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 6;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_MD5\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total date, Computer, RuleName, Hash_MD5, ImageLoaded, threat_malicious_confidence, threat_actor, threat_label, Signed, Signature, SignatureStatus\n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 7,
                            "width": 24,
                            "height": 6,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7934560",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        }
                    ],
                    "filters": [
                        {
                            "fieldName": "pre_filter",
                            "label": "pre_filter",
                            "defaultValue": "*",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7934559",
                                "7934560"
                            ]
                        },
                        {
                            "fieldName": "post_filter",
                            "label": "post_filter",
                            "defaultValue": "//",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7934559",
                                "7934560"
                            ]
                        }
                    ]
                },
                {
                    "type": "DashboardSyncDefinition",
                    "name": "Threat Intel - Sysmon - 07: Image loaded",
                    "description": "",
                    "detailLevel": 0,
                    "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                    "panels": [
                        {
                            "name": "Suspicious HASh256 Hash",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_SHA256\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total date, Computer, RuleName, Hash_SHA256, image, ImageLoaded, threat_malicious_confidence, threat_actor, threat_label, FileVersion, Description, Product, Company, OriginalFileName, Signed, Signature, SignatureStatus\n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 1,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7934562",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Suspicious MD5 Hash",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 7;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImageLoaded\\:\\s(?<ImageLoaded>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nFileVersion\\:\\s(?<FileVersion>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nDescription\\:\\s(?<Description>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProduct\\:\\s(?<Product>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nCompany\\:\\s(?<Company>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nOriginalFileName\\:\\s(?<OriginalFileName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nHashes\\:\\s(?<Hashes>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSigned\\:\\s(?<Signed>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignature\\:\\s(?<Signature>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nSignatureStatus\\:\\s(?<SignatureStatus>[^\\r]*)\\r\\n\" nodrop\n\n// further extraction for hashes\n// assigning \"-\" as default value\n| format(\"%s\", \"-\") as hash_MD5\n| format(\"%s\", \"-\") as hash_SHA256\n| format(\"%s\", \"-\") as hash_IMPHASH\n\n| parse regex field=Hashes \"MD5\\=(?<hash_MD5>\\w+)\" nodrop\n| parse regex field=Hashes \"SHA256\\=(?<hash_SHA256>\\w+)\" nodrop\n| parse regex field=Hashes \"IMPHASH\\=(?<hash_IMPHASH>\\w+)\" nodrop\n\n| where !(hash_SHA256 = \"-\")\n| ToLowerCase(hash_SHA256) as hash_SHA256\n\n// THREAT INTEL LOOKUP\n// Scope: HashSHA256\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=hash_MD5\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label nodrop\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregating all fields\n| count as Total date, Computer, RuleName, Hash_MD5, image, ImageLoaded, threat_malicious_confidence, threat_actor, threat_label, FileVersion, Description, Product, Company, OriginalFileName, Signed, Signature, SignatureStatus\n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 8,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7934563",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        }
                    ],
                    "filters": [
                        {
                            "fieldName": "pre_filter",
                            "label": "pre_filter",
                            "defaultValue": "*",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7934562",
                                "7934563"
                            ]
                        },
                        {
                            "fieldName": "post_filter",
                            "label": "post_filter",
                            "defaultValue": "//",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7934562",
                                "7934563"
                            ]
                        }
                    ]
                },
                {
                    "type": "DashboardSyncDefinition",
                    "name": "Threat Intel - Sysmon - 22: DNSEvent (DNS query)",
                    "description": "",
                    "detailLevel": 0,
                    "properties": "{\"layoutType\":\"gridster\",\"theme\":\"dark-theme\"}",
                    "panels": [
                        {
                            "name": "Suspicious Domain in DNS Query",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// THREAT INTEL LOOKUP\n// Scope: QueryName\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=QueryName\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n| count as Total date, Computer, RuleName, User, ProcessId, Image, QueryName,QueryResults, QueryStatus , threat_malicious_confidence, threat_actor, threat_label \n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 1,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7934564",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Suspicious IP Returned in DNS Query",
                            "viewerType": "table",
                            "detailLevel": 2,
                            "queryString": "_sourceCategory=**TO_REPLACE**  \n          sysmon \n          \"Microsoft-Windows-Sysmon/Operational\"\n          \"EventCode = 22;\"\n          {{pre_filter}} // PRE filter\n\n// parsing event headers\n| parse \"Computer = \\\"*\\\";\" as Computer nodrop \n| parse \"EventCode = *;\" as EventCode nodrop \n| parse \"RecordNumber = *;\" as RecordNumber nodrop \n| parse \"Type = \\\"*\\\";\" as Type nodrop \n| parse \"CategoryString = \\\"*\\\";\" as CategoryString nodrop \n\n// tweak to make sure the last field ends with a simple \\n, insead of \";\\n\n| replace(_raw, \"\\\";\\n\\tInsertionStrings\", \"\\r\\n\\\";InsertionStrings\") as _raw\n\n// extracting fields\n| parse regex \"\\nRuleName\\:\\s(?<RuleName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nUtcTime\\:\\s(?<UtcTime>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessGuid\\:\\s(?<ProcessGuid>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nProcessId\\:\\s(?<ProcessId>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryName\\:\\s(?<QueryName>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryStatus\\:\\s(?<QueryStatus>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nQueryResults\\:\\s(?<QueryResults>[^\\r]*)\\r\\n\" nodrop\n| parse regex \"\\nImage\\:\\s(?<Image>[^\\r]*)\\r\\n\" nodrop\n\n// formating date\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n// aggregation\n| parse regex field=QueryResults \"(?<ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\" multi\n\n| lookup asn, organization from asn://default on ip=ip\n| lookup country_code, country_name, region, city from geo://location on ip = ip\n\n// THREAT INTEL LOOKUP\n// Scope: SourceIp\n| lookup type as threat_type, actor as threat_actor, raw as threat_raw, threatlevel as threat_malicious_confidence from sumo://threat/cs on threat=ip\n\n// Parsing labels (there can be multiple ones) into label_name field\n| json field=threat_raw \"labels[*].name\" as threat_label\n| replace(threat_label, \"\\\\/\",\"->\") as threat_label\n| replace(threat_label, \"\\\"\",\" \") as threat_label\n\n// Filtering on malicious_confidence\n| where !isNull(threat_malicious_confidence)\n\n// Assigning \"Unassigned\" to the actor field if it's empty\n| if (isEmpty(threat_actor), \"Unassigned\", threat_actor) as threat_actor\n\n// aggregation\n| formatDate(_messageTime, \"yyyy-MM-dd HH:mm:ss\") as date\n\n\n| count as Total date, Computer, RuleName, ProcessId, image, QueryName, ip, asn, organization, country_code, country_name, region, city,threat_malicious_confidence, threat_actor, threat_label \n| order by date\n| fields -Total\n\n{{post_filter}} // POST filter\n",
                            "metricsQueries": [],
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1w"
                                },
                                "to": null
                            },
                            "x": 1,
                            "y": 8,
                            "width": 24,
                            "height": 7,
                            "properties": "{\"version\":3,\"settings\":{\"table\":{\"version\":2,\"configuration\":{\"textTruncationMode\":\"none\",\"fontSize\":\"medium\",\"fontSizeOverride\":null,\"tableState\":null}},\"bar\":{\"chartType\":\"bar\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"column\":{\"chartType\":\"column\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"line\":{\"chartType\":\"line\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"area\":{\"chartType\":\"area\",\"version\":2,\"configuration\":{\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\",\"dimensions\":{\"width\":null,\"height\":null}},\"plotOptions\":{\"stacking\":null,\"lineToArea\":false},\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"},\"minorTickInterval\":null},\"yAxis\":[{\"title\":null,\"logScale\":false,\"min\":null,\"max\":null,\"bands\":null,\"minorTickInterval\":null}],\"seriesInfo\":{},\"showLineMarker\":true,\"lineMouseTracking\":true,\"multiSeriesTooltipOrder\":\"none\"}},\"pie\":{\"chartType\":\"pie\",\"version\":3,\"configuration\":{\"donutMode\":true,\"colors\":{\"index\":null,\"overrides\":null},\"legend\":{\"enabled\":true,\"position\":\"right\"},\"plotOptions\":{\"label\":{\"truncationMode\":\"middle\"},\"showSliceBorders\":true,\"maxNumOfPieSlices\":\"10\"}}},\"boxplot\":{\"chartType\":\"boxplot\",\"version\":1,\"configuration\":{\"xAxis\":{\"title\":null,\"label\":{\"truncationMode\":\"middle\"}},\"yAxis\":{\"title\":null,\"min\":null,\"max\":null}}},\"map\":{\"chartType\":\"map\",\"version\":1,\"configuration\":{\"maptype\":\"cluster\"}},\"svv\":{\"version\":2,\"configuration\":{\"colorOverride\":null,\"backgroundColorEnabled\":false,\"noDataBehavior\":{\"enabled\":false,\"color\":\"#cccccc\",\"value\":null,\"isString\":null},\"valueType\":{\"number\":{\"showNumber\":true,\"unit\":null,\"colorsByValueRange\":null},\"boolean\":{\"trueColor\":\"#6aa84f\",\"falseColor\":\"#cc0000\"}},\"labels\":{\"prefix\":{\"enabled\":false,\"text\":\"\",\"align\":\"left\"},\"postfix\":{\"enabled\":false,\"text\":\"\",\"align\":\"right\"}}}},\"sankey\":{\"version\":1,\"configuration\":{}},\"text\":{\"version\":1,\"configuration\":{\"text\":null}},\"metrics\":{\"version\":2,\"configuration\":{\"blockSettings\":{},\"viewType\":\"timeline\",\"zoom\":\"xy\",\"yAxis\":{\"defaults\":[{\"name\":\"\"},{\"name\":\"\"}],\"custom\":[{},{}]},\"xAxis\":{\"scrubber\":true},\"outliers\":{\"enabled\":true,\"top\":1,\"scope\":\"Chart\",\"cyclicality\":false,\"threshold\":7,\"autoShowBand\":true},\"colorFamily\":\"METRIC_DEFAULT\"}},\"common\":{\"version\":1,\"configuration\":{\"drilldown\":{\"fallback\":{\"target\":{\"id\":null,\"name\":null,\"enabled\":null}}}}}}}",
                            "id": "7934565",
                            "desiredQuantizationInSecs": 0,
                            "queryParameters": [
                                {
                                    "name": "pre_filter",
                                    "label": "pre_filter",
                                    "description": "Enter one or multiple strings to pre-filter the results. Those strings will be matched against the entire event payload. Wildcards are allowed, and case is insensitive.",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "*",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                },
                                {
                                    "name": "post_filter",
                                    "label": "post_filter",
                                    "description": "Enter any additional  Sumo search query that will be added at then end. This must be a valid search query, starting with pipe (\"|\"), and can use any extracted field. For example: [| where initiated = \"true\"]",
                                    "dataType": "QUERY_FRAGMENT",
                                    "value": "//",
                                    "autoComplete": {
                                        "autoCompleteType": "SKIP_AUTOCOMPLETE",
                                        "autoCompleteKey": null,
                                        "autoCompleteValues": [],
                                        "lookupFileName": null,
                                        "lookupLabelColumn": null,
                                        "lookupValueColumn": null
                                    }
                                }
                            ]
                        }
                    ],
                    "filters": [
                        {
                            "fieldName": "pre_filter",
                            "label": "pre_filter",
                            "defaultValue": "*",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7934564",
                                "7934565"
                            ]
                        },
                        {
                            "fieldName": "post_filter",
                            "label": "post_filter",
                            "defaultValue": "//",
                            "filterType": "textbox",
                            "properties": "",
                            "panelIds": [
                                "7934564",
                                "7934565"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}