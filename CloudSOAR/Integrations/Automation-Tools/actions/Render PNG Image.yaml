integration: 'Automation Tools'
name: 'Render PNG Image'
type: Enrichment
script:
    code: |
      import sys
      import argparse
      import urllib3
      import requests
      import base64
      import json
      
      try:
          parser = argparse.ArgumentParser()
          parser.add_argument('--base64', help='File Content, REQUIRED', required=True)
          parser.add_argument('--base64_key', help='JSON Key, REQUIRED', required=True)
          parser.add_argument('--image_name', help='Image Name', required=False)
          parser.add_argument('--utf_bool', help='Enabled UTF-8 Encoding', required=False)

          args, unknown = parser.parse_known_args()
          
          with open(args.base64, "r") as file:
              data = json.load(file)
              base64_unicode = data['message'][args.base64_key]
              if args.utf_bool == "true" or args.utf_bool == "1":
                  base64_unicode = str(base64_unicode,'utf-8')

          resJson = {}
          if args.image_name:
              resJson["image_name"] = args.image_name
          else:
              resJson["image_name"] = file_name
          resJson["base64"] = base64_unicode
          print(json.dumps(resJson))
          exit(0)

      except Exception as e:
          err = str(e)
          sys.stderr.write(str(e))
          exit(-1)
fields:
  - id: base64
    label: 'File Content'
    type: upload
    required: true
    hint: 'Use "output.raw" from a previous action that has a base64-encoded string as a JSON element.'
  - id: image_name
    label: 'Image Name'
    type: text
    required: false
    hint: 'Optional: File name, URL, etc.'
  - id: base64_key
    label: 'JSON Key'
    type: text
    required: true
    hint: 'This should be set to the JSON key/value that contains a base64-encoded string'
  - id: utf_bool
    label: 'Enable UTF-8 Encoding'
    type: checkbox
    required: false
    hint: 'If errors are encountered, selecting this option will try passing the base64 content as a UTF-8 encoded string.'
output:
    - path: 'image_name'
      type: string
    - path: 'base64'
      type: string
image_base64_png: 'base64'